{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"E:\\\\Zero to mastery\\\\Apps Developed\\\\facedetector\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport Clarifai from 'clarifai';\nimport Particles from 'react-particles-js';\nimport Navigation from './components/Navigation/Navigation';\nimport Signin from './components/Signin/Signin';\nimport Register from './components/Register/Register';\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition';\nimport Logo from './components/LOGO/Logo';\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm';\nimport Rank from './components/Rank/Rank';\nimport './App.css';\nconst app = new Clarifai.App({\n  apiKey: '184dd713f35942dc8f8ac2efce9137c0'\n});\nconst particleOptions = {\n  particles: {\n    number: {\n      value: 80,\n      density: {\n        enable: true,\n        value_area: 800\n      }\n    }\n  }\n};\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.loadUser = data => {\n      this.setState({\n        user: {\n          id: data.id,\n          name: data.name,\n          email: data.email,\n          entries: data.entries,\n          joined: data.joined\n        }\n      });\n    };\n\n    this.facelocator = data => {\n      const clarifaiFace = data.outputs[0].data.regions[0].region_info.bounding_box;\n      const image = document.getElementById('inputimage');\n      const width = Number(image.width);\n      const height = Number(image.height);\n      return {\n        leftCol: clarifaiFace.left_col * width,\n        topRow: clarifaiFace.top_row * height,\n        rightCol: width - clarifaiFace.right_col * width,\n        bottomRow: height - clarifaiFace.bottom_row * height\n      };\n    };\n\n    this.displayFaceBox = box => {\n      this.setState({\n        box: box\n      });\n    };\n\n    this.onInputChange = event => {\n      this.setState({\n        input: event.target.value\n      });\n    };\n\n    this.onDetectButton = () => {\n      this.setState({\n        imageUrl: this.state.input\n      });\n      app.models.predict(Clarifai.FACE_DETECT_MODEL, this.state.input).then(response => {\n        if (response) {\n          fetch('http://localhost:3000/image', {\n            method: 'put',\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n              id: this.state.user.id\n            })\n          }).then(response => response.json()).then(count => {\n            this.setState({\n              user: {\n                entries: count\n              }\n            });\n          });\n        }\n\n        this.displayFaceBox(this.facelocator(response));\n      }).catch(err => console.log(err));\n    };\n\n    this.onRouteChange = route => {\n      this.setState({\n        route: route\n      });\n    };\n\n    this.state = {\n      input: '',\n      imageUrl: '',\n      box: {},\n      route: 'Signin',\n      user: {\n        id: '',\n        name: '',\n        email: '',\n        entries: 0,\n        joined: ''\n      }\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(Particles, {\n        className: \"particles\",\n        params: particleOptions\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 12\n      }, this), this.state.route === 'home' ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Navigation, {\n          onRouteChange: this.onRouteChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Logo, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Rank, {\n          name: this.state.user.name,\n          entries: this.state.user.entries\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 12\n        }, this), /*#__PURE__*/_jsxDEV(ImageLinkForm, {\n          onInputChange: this.onInputChange,\n          onDetectButton: this.onDetectButton\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 12\n        }, this), /*#__PURE__*/_jsxDEV(FaceRecognition, {\n          box: this.state.box,\n          imageUrl: this.state.imageUrl\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 12\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 12\n      }, this) : this.state.route === 'Signin' ? /*#__PURE__*/_jsxDEV(Signin, {\n        loadUser: this.loadUser,\n        onRouteChange: this.onRouteChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 14\n      }, this) : /*#__PURE__*/_jsxDEV(Register, {\n        loadUser: this.loadUser,\n        onRouteChange: this.onRouteChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 14\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["E:/Zero to mastery/Apps Developed/facedetector/src/App.js"],"names":["React","Component","Clarifai","Particles","Navigation","Signin","Register","FaceRecognition","Logo","ImageLinkForm","Rank","app","App","apiKey","particleOptions","particles","number","value","density","enable","value_area","constructor","loadUser","data","setState","user","id","name","email","entries","joined","facelocator","clarifaiFace","outputs","regions","region_info","bounding_box","image","document","getElementById","width","Number","height","leftCol","left_col","topRow","top_row","rightCol","right_col","bottomRow","bottom_row","displayFaceBox","box","onInputChange","event","input","target","onDetectButton","imageUrl","state","models","predict","FACE_DETECT_MODEL","then","response","fetch","method","headers","body","JSON","stringify","json","count","catch","err","console","log","onRouteChange","route","render"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport Clarifai from'clarifai';\nimport Particles from 'react-particles-js';\nimport Navigation from './components/Navigation/Navigation';\nimport Signin from './components/Signin/Signin';\nimport Register from './components/Register/Register';\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition';\nimport Logo from './components/LOGO/Logo';\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm'; \nimport Rank from './components/Rank/Rank'; \nimport './App.css';\n\nconst app = new Clarifai.App({\n apiKey: '184dd713f35942dc8f8ac2efce9137c0'\n});\n\nconst particleOptions={\n\tparticles: {\n\t\tnumber:{\n\t\t\tvalue: 80,\n\t\t\tdensity:{\n\t\t\t\tenable:true,\n\t\t\t\tvalue_area:800\t\n\t\t\t}\n\t\t}\n\t\t\t\n\t}\n}\n\n              \nclass App extends Component {\nconstructor(){\n\tsuper();\n\tthis.state={\n\t\tinput:'',\n    imageUrl:'',\n    box:{},\n    route: 'Signin',\n    user:{\n      id:'',\n      name:'',\n      email:'',\n      entries:0,\n      joined: ''\n    }\n\t}\n}\n\nloadUser=(data)=>{\n  this.setState({\n    user:{\n    id:data.id,\n    name:data.name,\n    email:data.email,\n    entries:data.entries,\n    joined: data.joined\n    }\n  })\n}\n\nfacelocator=(data)=>{\nconst clarifaiFace= data.outputs[0].data.regions[0].region_info.bounding_box;\nconst image= document.getElementById('inputimage');\nconst width= Number(image.width);\nconst height= Number(image.height);\nreturn{\n  leftCol: clarifaiFace.left_col * width,\n  topRow: clarifaiFace.top_row * height,\n  rightCol: width-(clarifaiFace.right_col * width),\n  bottomRow: height-(clarifaiFace.bottom_row * height)\n  }\n}\n\ndisplayFaceBox=(box)=>{\n  this.setState({box:box});\n}\n\nonInputChange=(event)=>{\n\tthis.setState({input: event.target.value});\n}\n\nonDetectButton=()=>{\n\tthis.setState({imageUrl: this.state.input});\n\tapp.models.predict(Clarifai.FACE_DETECT_MODEL, this.state.input)\n\t.then(response=>{\n    if(response){\n     fetch('http://localhost:3000/image',{\n      method:'put',\n      headers:{'Content-Type':'application/json'},\n      body: JSON.stringify({\n        id: this.state.user.id,\n        })\n      })\n    .then(response=> response.json())\n    .then(count=>{\n      this.setState({\n        user:{\n          entries:count\n        }})\n      })   \n    }\n  this.displayFaceBox(this.facelocator(response))\n  })\n\t.catch(err=>console.log(err))\t\n\t\n}\nonRouteChange=(route)=>{\n  this.setState({route:route});\n}\n\n  render() {\n    return (\n      <div className=\"App\">\n          \t<Particles className='particles'\n          \tparams={particleOptions}\n          \t/>\n       \t\n        {this.state.route==='home' \n         ? <div>\n            <Navigation onRouteChange={this.onRouteChange}/>\n            <Logo/> \n      \t    <Rank name={this.state.user.name} entries={this.state.user.entries}/>\n      \t    <ImageLinkForm \n      \t     onInputChange={this.onInputChange} \n      \t     onDetectButton={this.onDetectButton}\n      \t    />\n      \t    <FaceRecognition box={this.state.box} imageUrl={this.state.imageUrl}/>\n            </div>\n          :(\n            this.state.route==='Signin'\n            ?<Signin loadUser={this.loadUser} onRouteChange={this.onRouteChange}/> \n            :<Register loadUser={this.loadUser} onRouteChange={this.onRouteChange}/>\n             )\n          }\n      </div>\n    );\n  }\n}\n\n\nexport default App;\n\n"]},"metadata":{},"sourceType":"module"}